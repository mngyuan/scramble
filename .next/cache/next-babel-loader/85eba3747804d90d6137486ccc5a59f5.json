{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/phorust/git/scramble/components/Scramble.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nconst RAND_CHAR_POOL = '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\n\nconst randC = () => RAND_CHAR_POOL.charAt(Math.floor(Math.random() * RAND_CHAR_POOL.length));\n\nconst randS = l => Array(l).fill(' ').map(randC).join('');\n\nconst timerFunction = (cb, cbFinal) => () => {\n  cb();\n  setTimeout(() => {\n    cb();\n    setTimeout(() => {\n      cb();\n      setTimeout(() => {\n        cb();\n        setTimeout(() => {\n          cbFinal();\n        }, timeout(4));\n      }, timeout(3));\n    }, timeout(2));\n  }, timeout(1));\n};\n\nconst INITIAL_TIMEOUT = 50;\n\nconst timeout = n => INITIAL_TIMEOUT ** n + Math.random() * INITIAL_TIMEOUT;\n\nconst ScrambleC = props => {\n  const {\n    0: c,\n    1: setC\n  } = useState(props.c);\n  useEffect(() => {\n    const timer = setTimeout(timerFunction(() => setC(randC), () => setC(props.c)), INITIAL_TIMEOUT + Math.random() * INITIAL_TIMEOUT);\n    return () => clearTimeout(timer);\n  }, [props.c]);\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, c);\n};\n\nconst Scramble = props => {\n  const cs = _Array$from(props.s).map((c, i) => __jsx(ScrambleC, {\n    c: c,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n\n  console.log(cs);\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, cs);\n};\n\nexport default Scramble;","map":{"version":3,"sources":["/Users/phorust/git/scramble/components/Scramble.js"],"names":["React","useState","useEffect","RAND_CHAR_POOL","randC","charAt","Math","floor","random","length","randS","l","Array","fill","map","join","timerFunction","cb","cbFinal","setTimeout","timeout","INITIAL_TIMEOUT","n","ScrambleC","props","c","setC","timer","clearTimeout","Scramble","cs","s","i","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,MAAMC,cAAc,GAClB,kGADF;;AAEA,MAAMC,KAAK,GAAG,MACZD,cAAc,CAACE,MAAf,CAAsBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,cAAc,CAACM,MAA1C,CAAtB,CADF;;AAEA,MAAMC,KAAK,GAAGC,CAAC,IACbC,KAAK,CAACD,CAAD,CAAL,CACGE,IADH,CACQ,GADR,EAEGC,GAFH,CAEOV,KAFP,EAGGW,IAHH,CAGQ,EAHR,CADF;;AAMA,MAAMC,aAAa,GAAG,CAACC,EAAD,EAAKC,OAAL,KAAiB,MAAM;AAC3CD,EAAAA,EAAE;AACFE,EAAAA,UAAU,CAAC,MAAM;AACfF,IAAAA,EAAE;AACFE,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,EAAE;AACFE,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,EAAE;AACFE,QAAAA,UAAU,CAAC,MAAM;AACfD,UAAAA,OAAO;AACR,SAFS,EAEPE,OAAO,CAAC,CAAD,CAFA,CAAV;AAGD,OALS,EAKPA,OAAO,CAAC,CAAD,CALA,CAAV;AAMD,KARS,EAQPA,OAAO,CAAC,CAAD,CARA,CAAV;AASD,GAXS,EAWPA,OAAO,CAAC,CAAD,CAXA,CAAV;AAYD,CAdD;;AAgBA,MAAMC,eAAe,GAAG,EAAxB;;AACA,MAAMD,OAAO,GAAGE,CAAC,IAAID,eAAe,IAAIC,CAAnB,GAAuBhB,IAAI,CAACE,MAAL,KAAgBa,eAA5D;;AAEA,MAAME,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAA,OAACC,CAAD;AAAA,OAAIC;AAAJ,MAAYzB,QAAQ,CAACuB,KAAK,CAACC,CAAP,CAA1B;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,KAAK,GAAGR,UAAU,CACtBH,aAAa,CACX,MAAMU,IAAI,CAACtB,KAAD,CADC,EAEX,MAAMsB,IAAI,CAACF,KAAK,CAACC,CAAP,CAFC,CADS,EAKtBJ,eAAe,GAAGf,IAAI,CAACE,MAAL,KAAgBa,eALZ,CAAxB;AAOA,WAAO,MAAMO,YAAY,CAACD,KAAD,CAAzB;AACD,GATQ,EASN,CAACH,KAAK,CAACC,CAAP,CATM,CAAT;AAUA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,CAAP,CAAP;AACD,CAbD;;AAeA,MAAMI,QAAQ,GAAGL,KAAK,IAAI;AACxB,QAAMM,EAAE,GAAG,YAAWN,KAAK,CAACO,CAAjB,EAAoBjB,GAApB,CAAwB,CAACW,CAAD,EAAIO,CAAJ,KAAU,MAAC,SAAD;AAAW,IAAA,CAAC,EAAEP,CAAd;AAAiB,IAAA,GAAG,EAAEO,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,CAAX;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,EAAP,CAAP;AACD,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst RAND_CHAR_POOL =\n  '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\nconst randC = () =>\n  RAND_CHAR_POOL.charAt(Math.floor(Math.random() * RAND_CHAR_POOL.length));\nconst randS = l =>\n  Array(l)\n    .fill(' ')\n    .map(randC)\n    .join('');\n\nconst timerFunction = (cb, cbFinal) => () => {\n  cb();\n  setTimeout(() => {\n    cb();\n    setTimeout(() => {\n      cb();\n      setTimeout(() => {\n        cb();\n        setTimeout(() => {\n          cbFinal();\n        }, timeout(4));\n      }, timeout(3));\n    }, timeout(2));\n  }, timeout(1));\n};\n\nconst INITIAL_TIMEOUT = 50;\nconst timeout = n => INITIAL_TIMEOUT ** n + Math.random() * INITIAL_TIMEOUT;\n\nconst ScrambleC = props => {\n  const [c, setC] = useState(props.c);\n  useEffect(() => {\n    const timer = setTimeout(\n      timerFunction(\n        () => setC(randC),\n        () => setC(props.c),\n      ),\n      INITIAL_TIMEOUT + Math.random() * INITIAL_TIMEOUT,\n    );\n    return () => clearTimeout(timer);\n  }, [props.c]);\n  return <span>{c}</span>;\n};\n\nconst Scramble = props => {\n  const cs = Array.from(props.s).map((c, i) => <ScrambleC c={c} key={i} />);\n  console.log(cs);\n  return <span>{cs}</span>;\n};\n\nexport default Scramble;\n"]},"metadata":{},"sourceType":"module"}