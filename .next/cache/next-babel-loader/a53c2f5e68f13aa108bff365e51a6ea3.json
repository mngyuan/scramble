{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nvar _jsxFileName = \"/Users/phorust/git/scramble/components/Scramble.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nvar RAND_CHAR_POOL = '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\n\nvar randC = function randC() {\n  return RAND_CHAR_POOL.charAt(Math.floor(Math.random() * RAND_CHAR_POOL.length));\n};\n\nvar randS = function randS(l) {\n  return Array(l).fill(' ').map(randC).join('');\n};\n\nvar timerFunction = function timerFunction(cb, cbFinal) {\n  return function () {\n    cb();\n    setTimeout(function () {\n      cb();\n      setTimeout(function () {\n        cb();\n        setTimeout(function () {\n          cb();\n          setTimeout(function () {\n            cbFinal();\n          }, 400);\n        }, 200);\n      }, 100);\n    }, 50);\n  };\n};\n\nvar INITIAL_TIMEOUT = 50;\n\nvar ScrambleC = function ScrambleC(props) {\n  var _useState = useState(props.c),\n      c = _useState[0],\n      setC = _useState[1];\n\n  useEffect(function () {\n    var timer = setTimeout(timerFunction(function () {\n      return setC(randC);\n    }, function () {\n      return setC(props.c);\n    }), INITIAL_TIMEOUT + Math.random() * INITIAL_TIMEOUT);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [props.c]);\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, c);\n};\n\nvar Scramble = function Scramble(props) {\n  var cs = _Array$from(props.s).map(function (c, i) {\n    return __jsx(ScrambleC, {\n      c: c,\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  });\n\n  console.log(cs);\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, cs);\n};\n\nexport default Scramble;","map":{"version":3,"sources":["/Users/phorust/git/scramble/components/Scramble.js"],"names":["React","useState","useEffect","RAND_CHAR_POOL","randC","charAt","Math","floor","random","length","randS","l","Array","fill","map","join","timerFunction","cb","cbFinal","setTimeout","INITIAL_TIMEOUT","ScrambleC","props","c","setC","timer","clearTimeout","Scramble","cs","s","i","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,IAAMC,cAAc,GAClB,kGADF;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SACZD,cAAc,CAACE,MAAf,CAAsBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,cAAc,CAACM,MAA1C,CAAtB,CADY;AAAA,CAAd;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,CAAC;AAAA,SACbC,KAAK,CAACD,CAAD,CAAL,CACGE,IADH,CACQ,GADR,EAEGC,GAFH,CAEOV,KAFP,EAGGW,IAHH,CAGQ,EAHR,CADa;AAAA,CAAf;;AAMA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,OAAL;AAAA,SAAiB,YAAM;AAC3CD,IAAAA,EAAE;AACFE,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,EAAE;AACFE,MAAAA,UAAU,CAAC,YAAM;AACfF,QAAAA,EAAE;AACFE,QAAAA,UAAU,CAAC,YAAM;AACfF,UAAAA,EAAE;AACFE,UAAAA,UAAU,CAAC,YAAM;AACfD,YAAAA,OAAO;AACR,WAFS,EAEP,GAFO,CAAV;AAGD,SALS,EAKP,GALO,CAAV;AAMD,OARS,EAQP,GARO,CAAV;AASD,KAXS,EAWP,EAXO,CAAV;AAYD,GAdqB;AAAA,CAAtB;;AAgBA,IAAME,eAAe,GAAG,EAAxB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBACPrB,QAAQ,CAACqB,KAAK,CAACC,CAAP,CADD;AAAA,MAClBA,CADkB;AAAA,MACfC,IADe;;AAEzBtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMuB,KAAK,GAAGN,UAAU,CACtBH,aAAa,CACX;AAAA,aAAMQ,IAAI,CAACpB,KAAD,CAAV;AAAA,KADW,EAEX;AAAA,aAAMoB,IAAI,CAACF,KAAK,CAACC,CAAP,CAAV;AAAA,KAFW,CADS,EAKtBH,eAAe,GAAId,IAAI,CAACE,MAAL,KAAgBY,eALb,CAAxB;AAOA,WAAO;AAAA,aAAMM,YAAY,CAACD,KAAD,CAAlB;AAAA,KAAP;AACD,GATQ,EASN,CAACH,KAAK,CAACC,CAAP,CATM,CAAT;AAUA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,CAAP,CAAP;AACD,CAbD;;AAeA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAL,KAAK,EAAI;AACxB,MAAMM,EAAE,GAAG,YAAWN,KAAK,CAACO,CAAjB,EAAoBf,GAApB,CAAwB,UAACS,CAAD,EAAIO,CAAJ;AAAA,WAAU,MAAC,SAAD;AAAW,MAAA,CAAC,EAAEP,CAAd;AAAiB,MAAA,GAAG,EAAEO,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAxB,CAAX;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,EAAP,CAAP;AACD,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst RAND_CHAR_POOL =\n  '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\nconst randC = () =>\n  RAND_CHAR_POOL.charAt(Math.floor(Math.random() * RAND_CHAR_POOL.length));\nconst randS = l =>\n  Array(l)\n    .fill(' ')\n    .map(randC)\n    .join('');\n\nconst timerFunction = (cb, cbFinal) => () => {\n  cb();\n  setTimeout(() => {\n    cb();\n    setTimeout(() => {\n      cb();\n      setTimeout(() => {\n        cb();\n        setTimeout(() => {\n          cbFinal();\n        }, 400);\n      }, 200);\n    }, 100);\n  }, 50);\n};\n\nconst INITIAL_TIMEOUT = 50;\n\nconst ScrambleC = props => {\n  const [c, setC] = useState(props.c);\n  useEffect(() => {\n    const timer = setTimeout(\n      timerFunction(\n        () => setC(randC),\n        () => setC(props.c),\n      ),\n      INITIAL_TIMEOUT + (Math.random() * INITIAL_TIMEOUT),\n    );\n    return () => clearTimeout(timer);\n  }, [props.c]);\n  return <span>{c}</span>;\n};\n\nconst Scramble = props => {\n  const cs = Array.from(props.s).map((c, i) => <ScrambleC c={c} key={i} />);\n  console.log(cs);\n  return <span>{cs}</span>;\n};\n\nexport default Scramble;\n"]},"metadata":{},"sourceType":"module"}