{"version":3,"file":"static/webpack/static/development/pages/index.js.2f019f39c2bc84d11e0d.hot-update.js","sources":["webpack:///./components/Scramble.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst RAND_CHAR_POOL =\n  '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\nconst randC = () =>\n  RAND_CHAR_POOL.charAt(Math.floor(Math.random() * RAND_CHAR_POOL.length));\nconst randS = l =>\n  Array(l)\n    .fill(' ')\n    .map(randC)\n    .join('');\n\nconst INITIAL_TIMEOUT = 35;\nconst DECAY_FACTOR = 2.5;\nconst timeout = n =>\n  INITIAL_TIMEOUT * n ** DECAY_FACTOR +\n  Math.random() * INITIAL_TIMEOUT * n ** DECAY_FACTOR;\n\nconst timerFunction = (cb, cbFinal) => () => {\n  cb();\n  setTimeout(() => {\n    cb();\n    setTimeout(() => {\n      cb();\n      setTimeout(() => {\n        cbFinal();\n      }, timeout(3));\n    }, timeout(2));\n  }, timeout(1));\n};\n\nconst ScrambleC = props => {\n  const [c, setC] = useState(props.c);\n  useEffect(() => {\n    const timer = setTimeout(\n      timerFunction(\n        () => setC(randC),\n        () => setC(props.c),\n      ),\n      INITIAL_TIMEOUT + Math.random() * INITIAL_TIMEOUT,\n    );\n    return () => clearTimeout(timer);\n  }, [props.c]);\n  return (\n    <span>\n      {c}\n      <style jsx>\n        {`\n          span {\n            opacity: ${c === props.c ? 1.0 : 0.5};\n          }\n        `}\n      </style>\n    </span>\n  );\n};\n\nconst Scramble = props => {\n  const cs = Array.from(props.s).map((c, i) => <ScrambleC c={c} key={i} />);\n  console.log(cs);\n  return <span>{cs}</span>;\n};\n\nexport default Scramble;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}